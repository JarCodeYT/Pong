from pygame import *

#Constants
SCREENWIDTH = 900
SCREENHEIGHT = 600
BGCOLOR = (0, 0, 0)
PLAYER1_COLOR = (0, 0, 255)
PLAYER2_COLOR = (255, 0, 0)
BALL_COLOR = (255, 255, 255)

def draw_objects():
    draw.rect(screen, PLAYER1_COLOR, p1Paddle)
    draw.rect(screen, PLAYER2_COLOR, p2Paddle)
    draw.ellipse(screen, BALL_COLOR, ball)

#Set up Screen
screen = display.set_mode((SCREENWIDTH, SCREENHEIGHT))
display.set_caption("Pong Game or whatever")

#Selecting Font
font.init()
comicSans35 = font.SysFont("Comic Sans MS", 35)

#Player Values
paddleWidth = 30
paddleHeight = 100
p1Y = 250
p2Y = 250
p1Points = 0
p2Points = 0

# DEFINE THE BALL's motion
ballX = 450
ballY = 300
ballDx = 4 #Horizontal Direction
ballDy = 4 #Vertical Direction

#GAME LOOOP
running = True
myClock = time.Clock()

while running:
    for evt in event.get():
        if evt.type == QUIT:
            running = False

    #Paddle movment p1
    keys = key.get_pressed()
    if keys[K_w] and p1Y > 0:
        p1Y -= 5
    elif keys[K_s] and p1Y + paddleHeight < SCREENHEIGHT:
        p1Y += 5
    #Paddle movment p2
    if keys[K_UP] and p2Y > 0:
        p2Y -= 5
    elif keys[K_DOWN] and p2Y + paddleHeight < SCREENHEIGHT:
        p2Y += 5

    #Define P1 Paddle, P2 Paddle
    p1Paddle = Rect(50, p1Y, paddleWidth, paddleHeight)
    p2Paddle = Rect(850, p2Y, paddleWidth, paddleHeight)

    #BALL postion
    ball = Rect(ballX, ballY, 10, 10)

    ballX += ballDx
    ballY += ballDy

    #PLAYER COLLISION DETECTION
    if ball.colliderect(p1Paddle):
        ballDx = abs(ballDx)
    elif ball.colliderect(p2Paddle):
        ballDx = abs(ballDx) * -1

    #WHAT HAPPENS WHEN THE BALL HITS THE TOP OR THE BOTTOM OF THE SCREEN??!?!?!!?
    elif ballY <= 0 or ballY >= SCREENHEIGHT:
        ballDy = -ballDy

    #WHAT HAPPENS WHEN SOMEONE SCORES? And how is the ball reset?
    elif ballX >= SCREENWIDTH or ballX <= 0:
        if ballX >= SCREENWIDTH:
            p1Points += 1
        elif ballX <= 0:
            p2Points += 1
        ballX = 450  #Resets Ball position back to the middle
        ballY = 300

    #DRAW THE GAME ELEMENTS
    screen.fill(BGCOLOR)
    draw_objects()

    #DISPLAY SCORE
    p1PtsTxt = comicSans35.render("P1 POINTS: " + str(p1Points), True, PLAYER1_COLOR)
    p2PtsTxt = comicSans35.render("P2 POINTS: " + str(p2Points), True, PLAYER2_COLOR)
    screen.blit(p1PtsTxt, (70, 20))
    screen.blit(p2PtsTxt, (620, 20))

    #UPDATING THE SCREEN
    display.flip()
    myClock.tick(60)

quit()
